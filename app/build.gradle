plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'org.jlleitschuh.gradle.ktlint' version '10.3.0'
}

android {
    compileSdkVersion Config.compileSdk

    defaultConfig {
        versionCode Config.versionCode
        versionName Config.versionName

        applicationId Config.applicationId
        setProperty("archivesBaseName", Config.archiveName)

        targetSdkVersion Config.targetSdk
        minSdkVersion Config.minSdk
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias 'mykeyalias'
            keyPassword 'mykeypassword'
            storeFile file('../keystore.jks')
            storePassword 'mykeystorepassword'
        }
    }

    buildTypes {
        debug {
            versionNameSuffix '-DEBUG'
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "backend"
    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            resValue "string", "app_name", Config.appName + " Dev"
            resValue "string", "leak_canary_display_activity_label", Config.appName + " Leaks"
            buildConfigField "String", "BASE_URL", "\"https://restcountries.eu/rest/v2/\""
            dimension "backend"
        }
        prod {
            resValue "string", "app_name", Config.appName
            buildConfigField "String", "BASE_URL", "\"https://restcountries.eu/rest/v2/\""
            dimension "backend"
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }

    compileOptions {
        sourceCompatibility = Config.javaVersion
        targetCompatibility = Config.javaVersion
    }

    kotlinOptions {
        jvmTarget = Config.javaVersion
        // Some Flow / Coroutine APIs we use are experimental and therefore would flood the build
        // log with warnings. Disabling those warnings here.
        freeCompilerArgs += Config.kotlinFreeCompilerArgs
    }

    lintOptions {
        warningsAsErrors true
        abortOnError true
    }

    buildFeatures {
        viewBinding true
    }
}

apply from: rootProject.file("gradle/test-dependencies.gradle")
apply from: rootProject.file("gradle/test-dependencies-android.gradle")

dependencies {
    implementation(project(path: ":core"))
    implementation(project(path: ":base-ui"))

    implementation(Libs.coil)
}
